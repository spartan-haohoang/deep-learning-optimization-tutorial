name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install UV
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync
        uv add --dev pytest pytest-cov pytest-mock black flake8 isort sphinx sphinx-rtd-theme nbconvert nbformat plotly tqdm
    
    - name: Verify installation
      run: |
        uv run python -c "import pytest; print(f'pytest version: {pytest.__version__}')"
        uv run python -c "import sys; print(f'Python path: {sys.executable}')"
    
    - name: Validate data
      run: |
        uv run python scripts/validate_data.py
    
    - name: Run tests
      run: |
        uv run python -m pytest --cov=. --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install UV
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync
        uv add --dev pytest pytest-cov pytest-mock black flake8 isort sphinx sphinx-rtd-theme nbconvert nbformat plotly tqdm
    
    - name: Run black
      run: |
        uv run black --check .
    
    - name: Run isort
      run: |
        uv run isort --check-only .
    
    - name: Run flake8
      run: |
        uv run flake8 .

  notebook-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install UV
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"
    
    - name: Install dependencies
      run: |
        uv sync
        uv add --dev pytest pytest-cov pytest-mock black flake8 isort sphinx sphinx-rtd-theme nbconvert nbformat plotly tqdm
    
    - name: Test notebook execution
      run: |
        uv run python scripts/run_notebook.py --timeout 300

  docker-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: deep-learning-optimization:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
